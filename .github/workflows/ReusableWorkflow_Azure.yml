name: Build and Deploy Docker Image to Azure WebApp
on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      tag: 
        type: string
    secrets:
      azure_credentials:
        required: true
      azure_resource_group:
        required: true
      azure_webapp:
        required: true
      registry:
        required: true
      registry_username:
        required: true
      registry_password:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:      
      - name: Checkout
        uses: actions/checkout@v2      
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1
      - name: Login to the Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}.azurecr.io
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}     
      - name: Set tag
        run: |
          if [ -z "${{ inputs.tag }}" ]
          then
            echo "final_tag=latest" >> $GITHUB_ENV
          else
            echo "final_tag=${{ inputs.tag }}" >> $GITHUB_ENV
          fi   
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ inputs.registry }}.azurecr.io/${{ inputs.registry }}/${{ inputs.image_name }}:${{ env.final_tag }}       
  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Azure Login
      uses: Azure/login@v1.4.3
      with:
        creds: ${{ secrets.azure_credentials }}
    - name: Ensure Azure WebApp staging slot started
      run: az webapp start --resource-group ${{ secrets.azure_resource_group }} --name ${{ secrets.azure_webapp }} --slot staging;   
    - name: Deploy to Azure WebApp staging slot
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.azure_webapp }}
        slot-name: staging
        images: '${{ inputs.registry }}.azurecr.io/${{ inputs.registry }}/${{ inputs.image_name }}:${{ env.final_tag }}'
    - name: Health Check Azure WebApp staging slot
      run: |
        curl -f https://${{ secrets.azure_webapp }}-staging.azurewebsites.net/api/healthcheck
        if [ $? -ne 0 ]; then 
          exit 1 ;
        fi
  swap_production:
    runs-on: ubuntu-latest
    needs: deploy_staging
    steps:
    - name: Swap Azure WebApp production slot with staging
      run: |
        az webapp deployment slot swap --resource-group ${{ secrets.azure_resource_group }} --name ${{ secrets.azure_webapp }} --slot staging --target-slot production
    - name: Health Check Azure WebApp production slot
      run: |
        curl -f https://${{ secrets.azure_webapp }}.azurewebsites.net/api/healthcheck
        if [ $? -ne 0 ]; then 
          exit 1;
        fi
    - name: Stop Azure WebApp staging slot
      run: az webapp stop --resource-group ${{ secrets.azure_resource_group }} --name ${{ secrets.azure_webapp }} --slot staging; 
  rollback:
    runs-on: ubuntu-latest
    needs: swap_production
    if: ${{ failure() }}
    steps:
    - name: Swap Azure WebApp production slot with staging
      run: |
        az webapp deployment slot swap --resource-group ${{ secrets.azure_resource_group }} --name ${{ secrets.azure_webapp }} --slot staging --target-slot production